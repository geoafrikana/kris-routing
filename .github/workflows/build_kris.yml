name: Build and test Kris Routing

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      PGPASSWORD: ${{ secrets.PGPASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      CAMEROON_PBF_URI: "https://download.geofabrik.de/africa/cameroon-latest.osm.pbf"
      YAOUNDE_BOUNDING_BOX: 10.1,3.01,13.39,6.31

    steps:
      - uses: actions/checkout@v3

      - name: Start PostgreSQL with Docker Compose
        run: cd scripts && docker compose up -d

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U $POSTGRES_USER; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Enable PostGIS, hstore, and pgRouting extensions
        run: |
          psql \
            "postgresql://$POSTGRES_USER:$PGPASSWORD@localhost:5432/$POSTGRES_DB" \
            -c "CREATE EXTENSION IF NOT EXISTS hstore;
                CREATE EXTENSION IF NOT EXISTS pgrouting CASCADE;"
      
      - name: Install tools
        run: |
          sudo apt install osmctools
          sudo apt install osm2pgrouting
          sudo apt install -y osmium-tool
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv python install 3.12
      
      - name: ETL Yaounde data
        run: |
          wget $CAMEROON_PBF_URI
          
          osmium extract -b $YAOUNDE_BOUNDING_BOX \
             cameroon-latest.osm.pbf -o yaounde.pbf

          osmconvert yaounde.pbf \
            --drop-author --drop-version \
            --out-osm -o=yaounde_reduc.osm
          
          osm2pgrouting --f yaounde_reduc.osm \
            --dbname $POSTGRES_DB \
            --username $POSTGRES_USER --clean \
              -W $PGPASSWORD
      
      - name: Run tests
        run: |
          cd backend
          uv sync --dev
          export PYTHONPATH=.
          uv run pytest
      
      - name: deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER}}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd ~/kris-Routing
            git pull
            sudo systemctl restart kris